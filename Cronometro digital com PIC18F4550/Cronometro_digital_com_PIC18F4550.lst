;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 17/12/2023 10:49:07
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF49  	GOTO        146
_INTERRUPCAO_HIGH:
;CronometroDigitalPIC18F4550.c,17 :: 		void INTERRUPCAO_HIGH() iv 0x0008 ics ICS_AUTO{
;CronometroDigitalPIC18F4550.c,19 :: 		if(INTCON.INT0IF == 1){
0x0008	0xA2F2      	BTFSS       INTCON, 1 
0x000A	0xD003      	BRA         L_INTERRUPCAO_HIGH1
;CronometroDigitalPIC18F4550.c,20 :: 		T0CON.TMR0ON = 1; //Inicia o timer TMR0 (1s).
0x000C	0x8ED5      	BSF         T0CON, 7 
;CronometroDigitalPIC18F4550.c,21 :: 		T1CON.TMR1ON = 0; //Para o timer TMR1 (0,25s).
0x000E	0x90CD      	BCF         T1CON, 0 
;CronometroDigitalPIC18F4550.c,22 :: 		INTCON.INT0IF = 0; //Zera a flag de INT0.
0x0010	0x92F2      	BCF         INTCON, 1 
;CronometroDigitalPIC18F4550.c,23 :: 		}
L_INTERRUPCAO_HIGH1:
;CronometroDigitalPIC18F4550.c,26 :: 		if(INTCON3.INT1IF == 1){
0x0012	0xA0F0      	BTFSS       INTCON3, 0 
0x0014	0xD003      	BRA         L_INTERRUPCAO_HIGH2
;CronometroDigitalPIC18F4550.c,27 :: 		INTCON3.INT1IF = 0; //Para o timer TMR0 (1s).
0x0016	0x90F0      	BCF         INTCON3, 0 
;CronometroDigitalPIC18F4550.c,28 :: 		T0CON.TMR0ON = 0; //Inicia o timer TMR1 (0,25s).
0x0018	0x9ED5      	BCF         T0CON, 7 
;CronometroDigitalPIC18F4550.c,29 :: 		T1CON.TMR1ON = 1; //Zera a flag de INT1.
0x001A	0x80CD      	BSF         T1CON, 0 
;CronometroDigitalPIC18F4550.c,30 :: 		}
L_INTERRUPCAO_HIGH2:
;CronometroDigitalPIC18F4550.c,33 :: 		if(INTCON.TMR0IF == 1){
0x001C	0xA4F2      	BTFSS       INTCON, 2 
0x001E	0xD007      	BRA         L_INTERRUPCAO_HIGH3
;CronometroDigitalPIC18F4550.c,34 :: 		PORTA.RA0 ^= 1; //Muda o estado lógico da porta A0.
0x0020	0x7080      	BTG         PORTA, 0 
;CronometroDigitalPIC18F4550.c,35 :: 		conta(); //Realiza a contagem.
0x0022	0xD80F      	RCALL       _conta
;CronometroDigitalPIC18F4550.c,36 :: 		TMR0H = 0xC2; //Atualiza o primeiro byte de TMR0.
0x0024	0x0EC2      	MOVLW       194
0x0026	0x6ED7      	MOVWF       TMR0H 
;CronometroDigitalPIC18F4550.c,37 :: 		TMR0L = 0xF7; //Atualiza o último byte de TMR0.
0x0028	0x0EF7      	MOVLW       247
0x002A	0x6ED6      	MOVWF       TMR0L 
;CronometroDigitalPIC18F4550.c,38 :: 		INTCON.TMR0IF = 0; //Zera a flag de TMR0.
0x002C	0x94F2      	BCF         INTCON, 2 
;CronometroDigitalPIC18F4550.c,39 :: 		}
L_INTERRUPCAO_HIGH3:
;CronometroDigitalPIC18F4550.c,42 :: 		if(PIR1.TMR1IF == 1){
0x002E	0xA09E      	BTFSS       PIR1, 0 
0x0030	0xD007      	BRA         L_INTERRUPCAO_HIGH4
;CronometroDigitalPIC18F4550.c,43 :: 		PORTA.RA0 ^= 1; //Muda o estado lógico da porta A0.
0x0032	0x7080      	BTG         PORTA, 0 
;CronometroDigitalPIC18F4550.c,44 :: 		conta(); //Realiza a contagem.
0x0034	0xD806      	RCALL       _conta
;CronometroDigitalPIC18F4550.c,45 :: 		TMR1H = 0x0B; //Atualiza o primeiro byte de TMR1.
0x0036	0x0E0B      	MOVLW       11
0x0038	0x6ECF      	MOVWF       TMR1H 
;CronometroDigitalPIC18F4550.c,46 :: 		TMR1L = 0xDC; //Atualiza o último byte de TMR0.
0x003A	0x0EDC      	MOVLW       220
0x003C	0x6ECE      	MOVWF       TMR1L 
;CronometroDigitalPIC18F4550.c,47 :: 		PIR1.TMR1IF = 0; //Zera a flag de TMR1.
0x003E	0x909E      	BCF         PIR1, 0 
;CronometroDigitalPIC18F4550.c,48 :: 		}
L_INTERRUPCAO_HIGH4:
;CronometroDigitalPIC18F4550.c,49 :: 		}
L_end_INTERRUPCAO_HIGH:
L__INTERRUPCAO_HIGH10:
0x0040	0x0011      	RETFIE      1
; end of _INTERRUPCAO_HIGH
_conta:
;CronometroDigitalPIC18F4550.c,7 :: 		void conta(){
;CronometroDigitalPIC18F4550.c,8 :: 		PORTD = bcd[contagem]; //Mostra o valor atual da contagem no display.
0x0042	0xF000C015  	MOVFF       _contagem, R0
0x0046	0xF001C016  	MOVFF       _contagem+1, R1
0x004A	0x0E00      	MOVLW       0
0x004C	0xBE16      	BTFSC       _contagem+1, 7 
0x004E	0x0EFF      	MOVLW       255
0x0050	0x6E02      	MOVWF       R2 
0x0052	0x6E03      	MOVWF       R3 
0x0054	0x3600      	RLCF        R0, 1 
0x0056	0x9000      	BCF         R0, 0 
0x0058	0x3601      	RLCF        R1, 1 
0x005A	0x3602      	RLCF        R2, 1 
0x005C	0x3603      	RLCF        R3, 1 
0x005E	0x0EDE      	MOVLW       _bcd
0x0060	0x2400      	ADDWF       R0, 0 
0x0062	0x6EF6      	MOVWF       TBLPTR 
0x0064	0x0E00      	MOVLW       hi_addr(_bcd)
0x0066	0x2001      	ADDWFC      R1, 0 
0x0068	0x6EF7      	MOVWF       TBLPTR+1 
0x006A	0x0E00      	MOVLW       higher_addr(_bcd)
0x006C	0x2002      	ADDWFC      R2, 0 
0x006E	0x6EF8      	MOVWF       TBLPTR+2 
0x0070	0x0009      	TBLRD*+
0x0072	0xFF83CFF5  	MOVFF       TABLAT, PORTD
;CronometroDigitalPIC18F4550.c,9 :: 		contagem++; //Aumenta a contagem.
0x0076	0x4A15      	INFSNZ      _contagem, 1 
0x0078	0x2A16      	INCF        _contagem+1, 1 
;CronometroDigitalPIC18F4550.c,10 :: 		if(contagem > 9) //Reinicia a contagem se ela passar de 9.
0x007A	0x0E80      	MOVLW       128
0x007C	0x6E00      	MOVWF       R0 
0x007E	0x0E80      	MOVLW       128
0x0080	0x1816      	XORWF       _contagem+1, 0 
0x0082	0x5C00      	SUBWF       R0, 0 
0x0084	0xE102      	BNZ         L__conta8
0x0086	0x5015      	MOVF        _contagem, 0 
0x0088	0x0809      	SUBLW       9
L__conta8:
0x008A	0xE202      	BC          L_conta0
;CronometroDigitalPIC18F4550.c,11 :: 		contagem = 0;
0x008C	0x6A15      	CLRF        _contagem 
0x008E	0x6A16      	CLRF        _contagem+1 
L_conta0:
;CronometroDigitalPIC18F4550.c,12 :: 		}
L_end_conta:
0x0090	0x0012      	RETURN      0
; end of _conta
_main:
;CronometroDigitalPIC18F4550.c,52 :: 		void main(){
;CronometroDigitalPIC18F4550.c,54 :: 		ADCON1 |= 0X0F; //Define os pinos na porta B como entradas digitais (00001111).
0x0092	0x0E0F      	MOVLW       15
0x0094	0x12C1      	IORWF       ADCON1, 1 
;CronometroDigitalPIC18F4550.c,55 :: 		TRISA = 0x00; //Define a porta A como saída.
0x0096	0x6A92      	CLRF        TRISA 
;CronometroDigitalPIC18F4550.c,56 :: 		PORTA = 0x00; //Define todos os valores da porta A com nível baixo (0).
0x0098	0x6A80      	CLRF        PORTA 
;CronometroDigitalPIC18F4550.c,57 :: 		TRISD = 0x00;  //Define a porta D como saída.
0x009A	0x6A95      	CLRF        TRISD 
;CronometroDigitalPIC18F4550.c,58 :: 		PORTD = 0x00;  //Define todos os valores da porta D com nível baixo (0).
0x009C	0x6A83      	CLRF        PORTD 
;CronometroDigitalPIC18F4550.c,59 :: 		TRISB = 0x0F; //Define a porta B como entrada.
0x009E	0x0E0F      	MOVLW       15
0x00A0	0x6E93      	MOVWF       TRISB 
;CronometroDigitalPIC18F4550.c,60 :: 		INTCON2.RBPU = 0; //Habilita chave global de resistores de pull-up na porta B.
0x00A2	0x9EF1      	BCF         INTCON2, 7 
;CronometroDigitalPIC18F4550.c,64 :: 		RCON.IPEN = 1; //Habilita os níveis de interrupção.
0x00A4	0x8ED0      	BSF         RCON, 7 
;CronometroDigitalPIC18F4550.c,65 :: 		INTCON.GIEH = 1; //Habilita AS interrupções de alta prioridade se IPEN = 1.
0x00A6	0x8EF2      	BSF         INTCON, 7 
;CronometroDigitalPIC18F4550.c,66 :: 		INTCON3.INT1IP = 1; //Habilita a alta prioridade para a interrupção 1.
0x00A8	0x8CF0      	BSF         INTCON3, 6 
;CronometroDigitalPIC18F4550.c,67 :: 		IPR1.TMR1IP = 1; //Habilita a alta prioridade para a TMR1.
0x00AA	0x809F      	BSF         IPR1, 0 
;CronometroDigitalPIC18F4550.c,71 :: 		INTCON.INT0IE = 1; //Habilita interrupção externa na porta INT0.
0x00AC	0x88F2      	BSF         INTCON, 4 
;CronometroDigitalPIC18F4550.c,72 :: 		INTCON3.INT1IE = 1; //Habilita a interrupção externa na porta INT1.
0x00AE	0x86F0      	BSF         INTCON3, 3 
;CronometroDigitalPIC18F4550.c,73 :: 		INTCON.TMR0IE = 1; //Habilita a interrupção do timer TMR0.
0x00B0	0x8AF2      	BSF         INTCON, 5 
;CronometroDigitalPIC18F4550.c,74 :: 		PIE1.TMR1IE = 1; //Habilita a interrupção do timer TMR1.
0x00B2	0x809D      	BSF         PIE1, 0 
;CronometroDigitalPIC18F4550.c,78 :: 		INTCON.INT0IF = 0; //Zera a flag de interrupção na porta INT0.
0x00B4	0x92F2      	BCF         INTCON, 1 
;CronometroDigitalPIC18F4550.c,79 :: 		INTCON3.INT1IF = 0; //Zera a flag de interrupção na porta INT1.
0x00B6	0x90F0      	BCF         INTCON3, 0 
;CronometroDigitalPIC18F4550.c,80 :: 		INTCON.TMR0IF = 0;  //Zera a flag de interrupção do timer TMR0.
0x00B8	0x94F2      	BCF         INTCON, 2 
;CronometroDigitalPIC18F4550.c,81 :: 		PIR1.TMR1IF = 0; //Zera a flag de interrupção do timer TMR1
0x00BA	0x909E      	BCF         PIR1, 0 
;CronometroDigitalPIC18F4550.c,84 :: 		TMR0H = 0xC2; //Primeiro byte do TMR0.
0x00BC	0x0EC2      	MOVLW       194
0x00BE	0x6ED7      	MOVWF       TMR0H 
;CronometroDigitalPIC18F4550.c,85 :: 		TMR0L = 0xF7; //Último byte do TMR0.
0x00C0	0x0EF7      	MOVLW       247
0x00C2	0x6ED6      	MOVWF       TMR0L 
;CronometroDigitalPIC18F4550.c,86 :: 		TMR1H = 0x0B; //Primeiro byte do TMR1.
0x00C4	0x0E0B      	MOVLW       11
0x00C6	0x6ECF      	MOVWF       TMR1H 
;CronometroDigitalPIC18F4550.c,87 :: 		TMR1L = 0xDC; //Último byte do TMR1.
0x00C8	0x0EDC      	MOVLW       220
0x00CA	0x6ECE      	MOVWF       TMR1L 
;CronometroDigitalPIC18F4550.c,90 :: 		INTCON2.INTEDG0 = 1; //Habilita a borda de subida na INT0.
0x00CC	0x8CF1      	BSF         INTCON2, 6 
;CronometroDigitalPIC18F4550.c,91 :: 		T0CON = 0b00000110; //Configura o registrador T0CON, referente ao TMR0.
0x00CE	0x0E06      	MOVLW       6
0x00D0	0x6ED5      	MOVWF       T0CON 
;CronometroDigitalPIC18F4550.c,92 :: 		T1CON = 0b10110000; //Configura o registrador T1CON, referente ao TMR1.
0x00D2	0x0EB0      	MOVLW       176
0x00D4	0x6ECD      	MOVWF       T1CON 
;CronometroDigitalPIC18F4550.c,93 :: 		contagem = 0; //Começa a contagem em 0.
0x00D6	0x6A15      	CLRF        _contagem 
0x00D8	0x6A16      	CLRF        _contagem+1 
;CronometroDigitalPIC18F4550.c,95 :: 		while(1); //Segura o processamento.
L_main5:
0x00DA	0xD7FF      	BRA         L_main5
;CronometroDigitalPIC18F4550.c,96 :: 		}
L_end_main:
0x00DC	0xD7FF      	BRA         $+0
; end of _main
;CronometroDigitalPIC18F4550.c,2 :: _bcd
0x00DE	0x003F ;_bcd+0
0x00E0	0x0006 ;_bcd+2
0x00E2	0x005B ;_bcd+4
0x00E4	0x004F ;_bcd+6
0x00E6	0x0066 ;_bcd+8
0x00E8	0x006D ;_bcd+10
0x00EA	0x007D ;_bcd+12
0x00EC	0x0007 ;_bcd+14
0x00EE	0x007F ;_bcd+16
0x00F0	0x0067 ;_bcd+18
; end of _bcd
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [58]    _INTERRUPCAO_HIGH
0x0042      [80]    _conta
0x0092      [76]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [2]    _contagem
0x0F80       [1]    PORTA
0x0F83       [1]    PORTD
0x0F92       [1]    TRISA
0x0F93       [1]    TRISB
0x0F95       [1]    TRISD
0x0F9D       [1]    PIE1
0x0F9E       [1]    PIR1
0x0F9F       [1]    IPR1
0x0FC1       [1]    ADCON1
0x0FCD       [1]    T1CON
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD0       [1]    RCON
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF0       [1]    INTCON3
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF6       [3]    TBLPTR
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x00DE      [20]    _bcd
